name: REDCAP Destroy

on:
  workflow_dispatch:   # manual trigger only

jobs:
  destroy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.2

      - name: Terraform Init
        run: terraform init -backend-config="bucket=redcap-eu-west-1" -backend-config="key=redcap/dev/terraform.tfstate" -backend-config="region=eu-west-1" -backend-config="dynamodb_table=redcap-eu-west-1"
        working-directory: ./environments/dev
      
      - name: Empty S3 Bucket (including versions)
        run: |
          bucket="clinical-docs-dev-dev-redcap-exports"

          # Delete all current objects
          aws s3 rm s3://$bucket --recursive

          # Delete all object versions
          versions=$(aws s3api list-object-versions --bucket "$bucket" \
            --query '{Objects: Versions[].{Key:Key,VersionId:VersionId}}' \
            --output json)

          if [ "$(echo $versions | jq '.Objects | length')" -gt 0 ]; then
            aws s3api delete-objects --bucket "$bucket" --delete "$versions"
          fi

          # Delete all delete markers (required for versioned buckets)
          markers=$(aws s3api list-object-versions --bucket "$bucket" \
            --query '{Objects: DeleteMarkers[].{Key:Key,VersionId:VersionId}}' \
            --output json)

          if [ "$(echo $markers | jq '.Objects | length')" -gt 0 ]; then
            aws s3api delete-objects --bucket "$bucket" --delete "$markers"
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./environments/dev